- ruleID: etcd_encryption_native
  effort: 1
  category: optional
  message: ""
  when:
    k8s-resource.rego_module:
        module: |-
            package policy

            

            # Check if encryption in etcd is enabled for native k8s
            deny[msga] {
            	apiserverpod := input[_]
            	cmd := apiserverpod.spec.containers[0].command
            	enc_command := [command | command := cmd[_]; contains(command, "--encryption-provider-config=")]
            	count(enc_command) < 1
            	fixpath := {"path":sprintf("spec.containers[0].command[%d]", [count(cmd)]), "value": "--encryption-provider-config=YOUR_VALUE"}

            	msga := {
            		"alertMessage": "etcd encryption is not enabled",
            		"alertScore": 9,
            		"packagename": "policy",
            		"failedPaths": [],
            		"fixPaths": [fixpath],
            		"alertObject": {"k8sApiObjects": [apiserverpod]},
            	}
            }

            incidents[msg] {
              violation := deny[_]
              apiObjects := object.get(violation.alertObject, "k8sApiObjects", false)
              item := apiObjects[_]
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }

            incidents[msg] {
              violation := deny[_]
              item := object.get(violation.alertObject, "externalObjects", false)
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }
