- ruleID: ensure_image_vulnerability_scanning_using_azure_defender_image_scanning_or_a_third_party_provider
  effort: 1
  category: optional
  message: Scan images being deployed to Azure (AKS) for vulnerabilities. Vulnerability scanning for images stored in Azure Container Registry is generally available in Azure Security Center. This capability is powered by Qualys, a leading provider of information security. When you push an image to Container Registry, Security Center automatically scans it, then checks for known vulnerabilities in packages or dependencies defined in the file. When the scan completes (after about 10 minutes), Security Center provides details and a security classification for each vulnerability detected, along with guidance on how to remediate issues and protect vulnerable attack surfaces.
  when:
    k8s-resource.rego_module:
        module: |-
            package policy

            # fails in case Azure Defender image scanning is not enabled.
            deny[msga] {
                cluster_describe := input[_]
            	cluster_describe.apiVersion == "management.azure.com/v1"
            	cluster_describe.kind == "ClusterDescribe"
            	cluster_describe.metadata.provider == "aks"
            	properties := cluster_describe.data.properties

                not isAzureImageScanningEnabled(properties)

                msga := {
            		"alertMessage": "Azure Defender image scanning is not enabled.",
            		"alertScore": 2,
            		"failedPaths": [],
            		"fixPaths": [],
            		"fixCommand": "az aks update --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>",
            		"packagename": "policy",
            		"alertObject": {
                        "externalObjects": cluster_describe
                    },

            	}
            }

            # isAzureImageScanningEnabled check if Azure Defender is enabled into the ClusterDescribe object.
            isAzureImageScanningEnabled(properties) {
                properties.securityProfile.defender.securityMonitoring.enabled == true
            }

            incidents[msg] {
              violation := deny[_]
              apiObjects := object.get(violation.alertObject, "k8sApiObjects", false)
              item := apiObjects[_]
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }

            incidents[msg] {
              violation := deny[_]
              item := object.get(violation.alertObject, "externalObjects", false)
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }
