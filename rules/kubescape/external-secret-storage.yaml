- ruleID: external_secret_storage
  effort: 1
  category: optional
  message: Consider the use of an external secrets storage and management system, instead of using Kubernetes Secrets directly, if you have more complex secret management needs. Ensure the solution requires authentication to access secrets, has auditing of access to and use of secrets, and encrypts secrets. Some solutions also make it easier to rotate secrets.
  when:
    k8s-resource.rego_module:
        module: "package policy\r\n\r\nimport future.keywords.every\r\n\r\n# Encryption config is not using a recommended provider for KMS\r\ndeny[msg] {\r\n\tobj = input[_]\r\n\tis_control_plane_info(obj)\r\n\tconfig_file := obj.data.APIServerInfo.encryptionProviderConfigFile\r\n\tconfig_file_content = decode_config_file(base64.decode(config_file.content))\r\n\r\n\tresources := config_file_content.resources\r\n\tevery resource in resources{\r\n\t\tnot has_recommended_provider(resource)\r\n\t}\r\n\r\n\tfix_paths := [\r\n\t{\"path\": sprintf(\"resources[%d].resources[%d]\", [count(resources), 0]),\t\"value\": \"secrets\"},\r\n\t{\"path\": sprintf(\"resources[%d].providers[%d].kms\", [count(resources), 0]),\t\"value\": \"YOUR_EXTERNAL_KMS\"},\r\n\t]\r\n\r\n\t# Add name to the failed object so that\r\n\t# it fit the format of the alert object\r\n\tfailed_obj := json.patch(config_file_content, [{\r\n\t\t\"op\": \"add\",\r\n\t\t\"path\": \"name\",\r\n\t\t\"value\": \"encryption-provider-config\",\r\n\t}])\r\n\r\n\tmsg := {\r\n\t\t\"alertMessage\": \"Encryption provider config is not using a recommended provider for KMS\",\r\n\t\t\"alertScore\": 2,\r\n\t\t\"failedPaths\": [],\r\n\t\t\"fixPaths\": fix_paths,\r\n\t\t\"packagename\": \"policy\",\r\n\t\t\"alertObject\": {\"externalObjects\": failed_obj},\r\n\t}\r\n}\r\n\r\nis_control_plane_info(obj) {\r\n\tobj.apiVersion == \"hostdata.kubescape.cloud/v1beta0\"\r\n\tobj.kind == \"ControlPlaneInfo\"\r\n}\r\n\r\ndecode_config_file(content) := parsed {\r\n\tparsed := yaml.unmarshal(content)\r\n} else := json.unmarshal(content)\r\n\r\nhas_recommended_provider(resource) {\r\n\trecommended_providers := {\"akeyless\", \"azurekmsprovider\", \"aws-encryption-provider\"}\r\n\tsome provider in resource.providers\r\n\trecommended_providers[provider.kms.name]\r\n}\r\n\nincidents[msg] {\n  violation := deny[_]\n  apiObjects := object.get(violation.alertObject, \"k8sApiObjects\", false)\n  item := apiObjects[_]\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}\n\nincidents[msg] {\n  violation := deny[_]\n  item := object.get(violation.alertObject, \"externalObjects\", false)\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}"
