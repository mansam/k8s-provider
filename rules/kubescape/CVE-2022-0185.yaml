- ruleID: CVE_2022_0185
  effort: 1
  category: optional
  message: ""
  when:
    k8s-resource.rego_module:
        module: |-
            package policy

            deny[msga] {
            	node := input[_]
                node.kind == "Node"

                parsed_kernel_version_arr := parse_kernel_version_to_array(node.status.nodeInfo.kernelVersion)
                is_azure := parsed_kernel_version_arr[4] == "azure"

                is_vulnerable_kernel_version(parsed_kernel_version_arr, is_azure)

                node.status.nodeInfo.operatingSystem == "linux"
                path := "status.nodeInfo.kernelVersion"

               linux_kernel_vars := [linux_kernel_var | linux_kernel_var = input[_]; linux_kernel_var.kind == "LinuxKernelVariables"]
               linux_kernel_vars_for_node := [linux_kernel_var | linux_kernel_var = linux_kernel_vars[_]; linux_kernel_var.metadata.name == node.metadata.name]
               data_userns_clones := [linux_kernel_var | linux_kernel_var = linux_kernel_vars_for_node[_].data[_]; is_unprivileged_userns_clone_enabled(linux_kernel_var)]
               count(data_userns_clones) > 0

               external_vector := {
                   "name": node.metadata.name,
            		"namespace": "",
            		"kind": node.kind,
            		"relatedObjects": linux_kernel_vars_for_node,
                    "kernelVersion": node.status.nodeInfo.kernelVersion
               }


             	msga := {
            			"alertMessage": "You are vulnerable to CVE-2022-0185",
                		"alertObject": {
                            "externalObjects": external_vector
                        },
                        "reviewPaths": ["kernelVersion"],
            			"failedPaths": ["kernelVersion"],
                        "fixPaths":[],
            	}
            }

            # General Kernel versions are between 5.1.1 and 5.16.2
            is_vulnerable_kernel_version(parsed_kernel_version_arr, is_azure) {
                is_azure == false
                parsed_kernel_version_arr[0] == 5
                parsed_kernel_version_arr[1] >= 1
                parsed_kernel_version_arr[1] <= 16
                parsed_kernel_version_arr[2] < 2
            }

            # Azure kernel version with is 5.4.0-1067-azure
            is_vulnerable_kernel_version(parsed_kernel_version_arr, is_azure) {
                is_azure == true
                parsed_kernel_version_arr[0] == 5
                parsed_kernel_version_arr[1] >= 1
                parsed_kernel_version_arr[1] <= 4
                parsed_kernel_version_arr[2] == 0
                parsed_kernel_version_arr[3] < 1067
            }

            is_unprivileged_userns_clone_enabled(linux_kernel_var) {
            	linux_kernel_var.key == "unprivileged_userns_clone"
                linux_kernel_var.value == "1\n"
            }

            parse_kernel_version_to_array(kernel_version_str) = output {
            	version_triplet := regex.find_n(`(\d+\.\d+\.\d+)`, kernel_version_str,-1)
                version_triplet_array := split(version_triplet[0],".")

                build_vendor := regex.find_n(`-(\d+)-(\w+)`, kernel_version_str,-1)
                build_vendor_array := split(build_vendor[0],"-")

                output := [to_number(version_triplet_array[0]),to_number(version_triplet_array[1]),to_number(version_triplet_array[2]),to_number(build_vendor_array[1]),build_vendor_array[2]]
            }
            incidents[msg] {
              violation := deny[_]
              apiObjects := object.get(violation.alertObject, "k8sApiObjects", false)
              item := apiObjects[_]
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }

            incidents[msg] {
              violation := deny[_]
              item := object.get(violation.alertObject, "externalObjects", false)
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }
