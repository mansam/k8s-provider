- ruleID: ensure_network_policy_is_enabled_eks
  effort: 1
  category: optional
  message: ""
  when:
    k8s-resource.rego_module:
        module: "package policy\r\n\r\nimport future.keywords.in\r\n\r\n# EKS supports Calico and Cilium add-ons, both supports Network Policy.\r\n# Deny if at least on of them is not in the list of CNINames.\r\n\r\ndeny[msg] {\r\n\t# Filter out irrelevent resources\r\n\tobj = input[_]\r\n\r\n    is_CNIInfos(obj)\r\n\r\n\tnot \"Calico\" in obj.data.CNINames\r\n\tnot \"Cilium\" in obj.data.CNINames\r\n\r\n\t# filter out irrelevant host-sensor data\r\n    obj_filtered := json.filter(obj, [\"apiVersion\", \"kind\", \"metadata\", \"data/CNINames\"])\r\n\r\n    msg := {\r\n\t\t\"alertMessage\": \"CNI doesn't support Network Policies.\",\r\n\t\t\"alertScore\": 2,\r\n\t\t\"failedPaths\": [],\r\n\t\t\"fixPaths\": [],\r\n\t\t\"fixCommand\": \"\",\r\n\t\t\"packagename\": \"policy\",\r\n\t\t\"alertObject\": {\"externalObjects\": obj_filtered},\r\n\r\n\t}\r\n}\r\n\r\nis_CNIInfos(obj) {\r\n\tobj.apiVersion == \"hostdata.kubescape.cloud/v1beta0\"\r\n\tobj.kind == \"CNIInfo\"\r\n}\r\n\nincidents[msg] {\n  violation := deny[_]\n  apiObjects := object.get(violation.alertObject, \"k8sApiObjects\", false)\n  item := apiObjects[_]\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}\n\nincidents[msg] {\n  violation := deny[_]\n  item := object.get(violation.alertObject, \"externalObjects\", false)\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}"
