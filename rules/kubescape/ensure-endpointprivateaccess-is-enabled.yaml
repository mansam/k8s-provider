- ruleID: ensure_endpointprivateaccess_is_enabled
  effort: 1
  category: optional
  message: ""
  when:
    k8s-resource.rego_module:
        module: |-
            package policy


            # Check if EndpointPrivateAccess in disabled for EKS
            deny[msga] {
            	cluster_config := input[_]
            	cluster_config.apiVersion == "eks.amazonaws.com/v1"
            	cluster_config.kind == "ClusterDescribe"
                cluster_config.metadata.provider == "eks"	
            	config = cluster_config.data

            	config.Cluster.ResourcesVpcConfig.EndpointPrivateAccess == false
            	
            	msga := {
            		"alertMessage": "endpointPrivateAccess is not enabled",
            		"alertScore": 3,
            		"packagename": "policy",
            		"failedPaths": [],
            		"fixPaths": [],
            		"fixCommand": "aws eks update-cluster-config --region $AWS_REGION --name $CLUSTER_NAME --resources-vpc-config endpointPrivateAccess=true,endpointPublicAccess=false",
            		"alertObject": {
            			"k8sApiObjects": [],
                        "externalObjects": cluster_config
            		}
            	}
            }



            incidents[msg] {
              violation := deny[_]
              apiObjects := object.get(violation.alertObject, "k8sApiObjects", false)
              item := apiObjects[_]
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }

            incidents[msg] {
              violation := deny[_]
              item := object.get(violation.alertObject, "externalObjects", false)
              msg := {
            	  "apiVersion": item.apiVersion,
            		"namespace": item.metadata.namespace,
            		"kind": item.kind,
            		"name": item.metadata.name,
              }
            }
