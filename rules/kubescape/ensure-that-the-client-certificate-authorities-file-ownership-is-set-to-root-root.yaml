- ruleID: ensure_that_the_client_certificate_authorities_file_ownership_is_set_to_root_root
  effort: 1
  category: optional
  message: Ensure that the certificate authorities file ownership is set to `root:root`.
  when:
    k8s-resource.rego_module:
        module: "package policy\r\n\r\nimport future.keywords.in\r\n\r\n\r\n\r\ndeny[msg] {\r\n\t# Filter out irrelevent resources\r\n\tobj = input[_]\r\n\tis_kubelet_info(obj)\r\n\r\n\tfile_obj_path := [\"data\", \"clientCAFile\"]\r\n\tfile := object.get(obj, file_obj_path, false)\r\n\r\n\t# Actual ownership check\r\n\tallowed_user := \"root\"\r\n\tallowed_group := \"root\"\r\n\tnot allowed_ownership(file.ownership, allowed_user, allowed_group)\r\n\r\n\t# Build the message\r\n\t# filter out irrelevant host-sensor data\r\n\tobj_filtered := json.filter(obj, [\r\n\t\tconcat(\"/\", file_obj_path),\r\n\t\t\"apiVersion\",\r\n\t\t\"kind\",\r\n\t\t\"metadata\",\r\n\t])\r\n\r\n\talert := sprintf(\"%s is not owned by %s:%s (actual owners are %s:%s)\", [\r\n\t\tfile.path,\r\n\t\tallowed_user,\r\n\t\tallowed_group,\r\n\t\tfile.ownership.username,\r\n\t\tfile.ownership.groupname,\r\n\t])\r\n\r\n\tmsg := {\r\n\t\t\"alertMessage\": alert,\r\n\t\t\"alertScore\": 2,\r\n\t\t\"failedPaths\": [],\r\n\t\t\"fixPaths\": [],\r\n\t\t\"fixCommand\": sprintf(\"chown %s:%s %s\", [allowed_user, allowed_group, file.path]),\r\n\t\t\"packagename\": \"policy\",\r\n\t\t\"alertObject\": {\"externalObjects\": obj_filtered},\r\n\t}\r\n}\r\n\r\nis_kubelet_info(obj) {\r\n\tobj.apiVersion == \"hostdata.kubescape.cloud/v1beta0\"\r\n\tobj.kind == \"KubeletInfo\"\r\n}\r\n\r\nallowed_ownership(ownership, user, group) {\r\n\townership.error # Do not fail if ownership is not found\r\n}\r\n\r\nallowed_ownership(ownership, user, group) {\r\n\townership.username == user\r\n\townership.groupname == group\r\n}\r\n\nincidents[msg] {\n  violation := deny[_]\n  apiObjects := object.get(violation.alertObject, \"k8sApiObjects\", false)\n  item := apiObjects[_]\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}\n\nincidents[msg] {\n  violation := deny[_]\n  item := object.get(violation.alertObject, \"externalObjects\", false)\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}"
