- ruleID: ensure_that_the_api_server_etcd_certfile_and_etcd_keyfile_arguments_are_set_as_appropriate
  effort: 1
  category: optional
  message: etcd should be configured to make use of TLS encryption for client connections.
  labels:
    - eks
    - kubernetes
    - kubescape
    - konveyor.io/target=openshift
    - konveyor.io/target=kubernetes
    - konveyor.io/target=eks
  description: Ensure That The Api Server Etcd Certfile And Etcd Keyfile Arguments Are Set As Appropriate
  when:
    k8s-resource.rego_module:
        module: "package policy\r\n\r\nimport future.keywords.in\r\n\r\ndeny[msg] {\r\n\tobj = input[_]\r\n\tis_api_server(obj)\r\n\tresult = invalid_flag(obj.spec.containers[0].command)\r\n\tmsg := {\r\n\t\t\"alertMessage\": \"etcd is not configured to use TLS properly\",\r\n\t\t\"alertScore\": 2,\r\n\t\t\"reviewPaths\": result.failed_paths,\r\n\t\t\"failedPaths\": result.failed_paths,\r\n\t\t\"fixPaths\": result.fix_paths,\r\n\t\t\"packagename\": \"policy\",\r\n\t\t\"alertObject\": {\"k8sApiObjects\": [obj]},\r\n\t}\r\n}\r\n\r\nis_api_server(obj) {\r\n\tobj.apiVersion == \"v1\"\r\n\tobj.kind == \"Pod\"\r\n\tobj.metadata.namespace == \"kube-system\"\r\n\tcount(obj.spec.containers) == 1\r\n\tcount(obj.spec.containers[0].command) > 0\r\n\tendswith(obj.spec.containers[0].command[0], \"kube-apiserver\")\r\n}\r\n\r\n# Assume flag set only once\r\ninvalid_flag(cmd) = result {\r\n\tfull_cmd = concat(\" \", cmd)\r\n\twanted = [\r\n\t\t[\"--etcd-certfile\", \"<path/to/client-certificate-file.crt>\"],\r\n\t\t[\"--etcd-keyfile\", \"<path/to/client-key-file.key>\"],\r\n\t]\r\n\r\n\tfix_paths = [{\r\n\t\t\"path\": sprintf(\"spec.containers[0].command[%d]\", [count(cmd) + i]),\r\n\t\t\"value\": sprintf(\"%s=%s\", wanted[i]),\r\n\t} |\r\n\t\tnot contains(full_cmd, wanted[i][0])\r\n\t]\r\n\r\n\tcount(fix_paths) > 0\r\n\r\n\tresult = {\r\n\t\t\"failed_paths\": [],\r\n\t\t\"fix_paths\": fix_paths,\r\n\t}\r\n}\r\n\nincidents[msg] {\n  violation := deny[_]\n  apiObjects := object.get(violation.alertObject, \"k8sApiObjects\", false)\n  item := apiObjects[_]\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}\n\nincidents[msg] {\n  violation := deny[_]\n  item := object.get(violation.alertObject, \"externalObjects\", false)\n  msg := {\n\t  \"apiVersion\": item.apiVersion,\n\t\t\"namespace\": item.metadata.namespace,\n\t\t\"kind\": item.kind,\n\t\t\"name\": item.metadata.name,\n  }\n}"
        resources: []
        defaults: false
